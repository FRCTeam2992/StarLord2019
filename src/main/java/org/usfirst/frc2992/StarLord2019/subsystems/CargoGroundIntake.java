// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2992.StarLord2019.subsystems;

import org.usfirst.frc2992.StarLord2019.Robot;
import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc2992.StarLord2019.commands.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.PIDOutput;
import edu.wpi.first.wpilibj.PIDSource;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import com.ctre.phoenix.motorcontrol.can.WPI_VictorSPX;
import edu.wpi.first.wpilibj.DigitalInput;
import edu.wpi.first.wpilibj.Solenoid;
import edu.wpi.first.wpilibj.Timer;

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class CargoGroundIntake extends Subsystem {

    public double counter;
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public Solenoid groundIntakeSol;
    private WPI_VictorSPX cargoIntakeMtr;

    Command stopCommand;
    Command stopCommand2;
    Command stopCommand3;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public CargoGroundIntake() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        groundIntakeSol = new Solenoid(0, 1);
        addChild("groundIntakeSol",groundIntakeSol);
        
        cargoIntakeMtr = new WPI_VictorSPX(9); 
        addChild("CargoGroundMotor", cargoIntakeMtr);

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        counter = 0;
    }

    @Override
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
        setDefaultCommand(new CargoGroundFeedwheel(0));
    }

    @Override
    public void periodic() {
        // Put code here to be run every loop
        if(Robot.oi.OSBtn.get() || Robot.oi.OSJoyBtn.get()){
            stopCommand = new CargoIntakeFeedWheel(0);
            stopCommand2 = new CargoGroundFeedwheel(0);
            stopCommand3 = new CargoDeploySol(false);
        } else{
            stopCommand = null;
            stopCommand2 = null;
            stopCommand3 = null;
        }
        if(stopCommand!=null) stopCommand.start();
        if(stopCommand2!= null) stopCommand2.start();
        if(stopCommand3!=null) stopCommand3.start();
    }

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS

    // Put methods for controlling this subsystem
    // here. Call these from Commands.
    public void CargoDeploy(Boolean Deploy) {
        groundIntakeSol.set(Deploy);
    }
    public void CargoGroundFeed(double Power) {
        cargoIntakeMtr.set(Power);
    }

}